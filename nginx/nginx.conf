user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log debug;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    sendfile on;
    keepalive_timeout 65;

    log_format detailed_log '$remote_addr - $remote_user [$time_local] '
                            '"$request" $status $body_bytes_sent '
                            '"$http_referer" "$http_user_agent" '
                            'request_id=$request_id '
                            'auth_redirect=$sent_http_location';

    server {
        listen 80;
        server_name localhost;

        access_log /var/log/nginx/access.log detailed_log;

        location = / {
            return 302 https://${AZURE_TENANT}.b2clogin.com/${AZURE_TENANT}.onmicrosoft.com/${AZURE_POLICY_NAME}/oauth2/v2.0/authorize?client_id=${AZURE_CLIENT_ID}&response_type=id_token&redirect_uri=http%3A%2F%2Flocalhost%2Fgrafana%2Foauth2%2Fcallback&scope=openid%20profile%20${AZURE_CLIENT_ID}&response_mode=form_post&nonce=$request_id&state=$request_uri;
        }

        location /grafana/ {
            proxy_pass http://grafana:3000/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Log headers for debugging
            add_header X-Debug-Headers-Received $http_x_ms_client_principal_name;

            # Extract the username from the id_token
            set $username $http_x_ms_client_principal_name;

            # Pass the username to Grafana
            proxy_set_header X-WEBAUTH-USER $username;
        }
    }
}